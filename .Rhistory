for (i in purpose$Purp_abbv){
j <- which(purpose$Purp_abbv == i, arr.ind=TRUE)
for (n in 1:nrow(df)){
if (grepl(i,df$PURPOSES[n])){
df$PURPOSES_NAME[n] <- purpose$Purp_name[j]
}
}
csv <- df %>% filter(df$PURPOSES_NAME==df$PURPOSES_NAME[j])
fn <- paste0(purpose$Purp_name[j],'.csv')
fp <-  file.path('input',fn)
write.csv(csv, file = fp )
}
df$PURPOSES_NAME[j]
View(df)
purpose$Purp_name[j]
df$PURPOSES[n]
purpose$Purp_name[j]
j <- which(purpose$Purp_abbv == i, arr.ind=TRUE)
purpose$Purp_name[12]
purpose$Purp_name[8]
for (i in purpose$Purp_abbv){
j <- which(purpose$Purp_abbv == i, arr.ind=TRUE)
for (n in 1:nrow(df)){
if (grepl(i,df$PURPOSES[n])){
df$PURPOSES_NAME[n] <- purpose$Purp_name[j]
}
}
csv <- df %>% filter(df$PURPOSES_NAME==df$PURPOSES_NAME[j])
fn <- paste0(purpose$Purp_name[j],'.csv')
fp <-  file.path('input',fn)
write.csv(csv, file = fp )
}
purpose$Purp_name[6]
j <- 6
fn <- paste0(purpose$Purp_name[j],'.csv')
j <- 1
for (n in 1:nrow(df)){
if (grepl(i,df$PURPOSES[n])){
df$PURPOSES_NAME[n] <- purpose$Purp_name[j]
}
}
csv <- df %>% filter(df$PURPOSES_NAME==df$PURPOSES_NAME[j])
fn <- paste0(purpose$Purp_name[j],'.csv')
fp <-  file.path('input',fn)
write.csv(csv, file = fp )
df$PURPOSES_NAME[j]
purpose$Purp_name[j]
purpose$Purp_name[j]
purpose$Purp_name[1]
for (i in purpose$Purp_abbv){
j <- which(purpose$Purp_abbv == i, arr.ind=TRUE)
for (n in 1:nrow(df)){
if (grepl(i,df$PURPOSES[n])){
df$PURPOSES_NAME[n] <- purpose$Purp_name[j]
}
}
csv <- df %>% filter(df$PURPOSES_NAME==purpose$Purp_name[j])
fn <- paste0(purpose$Purp_name[j],'.csv')
fp <-  file.path('input',fn)
write.csv(csv, file = fp )
}
for (i in purpose$Purp_abbv){
j <- which(purpose$Purp_abbv == i, arr.ind=TRUE)
for (n in 1:nrow(df)){
if (grepl(i,df$PURPOSES[n])){
df$PURPOSES_NAME[n] <- purpose$Purp_name[j]
}
}
csv <- df %>% filter(df$PURPOSES_NAME==j)
fn <- paste0(purpose$Purp_name[j],'.csv')
fp <-  file.path('input',fn)
write.csv(csv, file = fp )
}
for (i in purpose$Purp_abbv){
j <- which(purpose$Purp_abbv == i, arr.ind=TRUE)
for (n in 1:nrow(df)){
if (grepl(i,df$PURPOSES[n])){
df$PURPOSES_NAME[n] <- purpose$Purp_name[j]
}
}
csv <- df %>% filter(df$PURPOSES_NAME==j)
fn <- paste0(purpose$Purp_name[j],'.csv')
fp <-  file.path('input',fn)
write.csv(csv, file = fp )
}
df <- read.csv(list.files(pattern = "jointbl_NWIS_NOAA_NID.csv", recursive = TRUE, full.names = TRUE),
header=T,
stringsAsFactors=F,
colClasses=c("locname"="character"))
df$PURPOSES_NAME <- "None"
abbv <- list("I","H","C","N","S","R","P","F","D","T","G","O")
name <- list("Irrigation", "Hydroelectric","Flood Control","Navigation","Water Supply","Recreation","Fire Protection","Fish and Wildlife Pond","Debris Control","Tailings","Grade Stabilzation","other")
purpose <- do.call(rbind, Map(data.frame, Purp_abbv=abbv, Purp_name=name))
for (i in purpose$Purp_abbv){
j <- which(purpose$Purp_abbv == i, arr.ind=TRUE)
for (n in 1:nrow(df)){
if (grepl(i,df$PURPOSES[n])){
df$PURPOSES_NAME[n] <- purpose$Purp_name[j]
}
}
csv <- df %>% filter(df$PURPOSES_NAME==j)
fn <- paste0(purpose$Purp_name[j],'.csv')
fp <-  file.path('input',fn)
write.csv(csv, file = fp )
}
View(csv)
View(df)
df <- read.csv(list.files(pattern = "NWIS_NID_NOAA_Master.csv", recursive = TRUE, full.names = TRUE),
header=T,
stringsAsFactors=F,
colClasses=c("locname"="character"))
df$PURPOSES_NAME <- "None"
abbv <- list("I","H","C","N","S","R","P","F","D","T","G","O")
name <- list("Irrigation", "Hydroelectric","Flood Control","Navigation","Water Supply","Recreation","Fire Protection","Fish and Wildlife Pond","Debris Control","Tailings","Grade Stabilzation","other")
purpose <- do.call(rbind, Map(data.frame, Purp_abbv=abbv, Purp_name=name))
for (i in purpose$Purp_abbv){
j <- which(purpose$Purp_abbv == i, arr.ind=TRUE)
for (n in 1:nrow(df)){
if (grepl(i,df$PURPOSES[n])){
df$PURPOSES_NAME[n] <- purpose$Purp_name[j]
}
}
csv <- df %>% filter(df$PURPOSES_NAME==j)
fn <- paste0(purpose$Purp_name[j],'.csv')
fp <-  file.path('input',fn)
write.csv(csv, file = fp )
}
library(dplyr)
##-- Read in full join table
df <- read.csv(list.files(pattern = "NWIS_NID_NOAA_Master.csv", recursive = TRUE, full.names = TRUE),
header=T,
stringsAsFactors=F,
colClasses=c("locname"="character"))
df$PURPOSES_NAME <- "None"
abbv <- list("I","H","C","N","S","R","P","F","D","T","G","O")
name <- list("Irrigation", "Hydroelectric","Flood Control","Navigation","Water Supply","Recreation","Fire Protection","Fish and Wildlife Pond","Debris Control","Tailings","Grade Stabilzation","other")
purpose <- do.call(rbind, Map(data.frame, Purp_abbv=abbv, Purp_name=name))
for (i in purpose$Purp_abbv){
j <- which(purpose$Purp_abbv == i, arr.ind=TRUE)
for (n in 1:nrow(df)){
if (grepl(i,df$PURPOSES[n])){
df$PURPOSES_NAME[n] <- purpose$Purp_name[j]
}
}
csv <- df %>% filter(df$PURPOSES_NAME==j)
fn <- paste0(purpose$Purp_name[j],'.csv')
fp <-  file.path('input',fn)
write.csv(csv, file = fp )
}
## Dam Purpose determination
## Danielle Hare
## October 2019
## UConn Advanced Stream Ecology Course
## --- Input Packages
library(dplyr)
##-- Read in full join table
df <- read.csv(list.files(pattern = "NWIS_NID_NOAA_Master.csv", recursive = TRUE, full.names = TRUE),
header=T,
stringsAsFactors=F,
colClasses=c("locname"="character"))
df$PURPOSES_NAME <- "None"
abbv <- list("I","H","C","N","S","R","P","F","D","T","G","O")
name <- list("Irrigation", "Hydroelectric","Flood Control","Navigation","Water Supply","Recreation","Fire Protection","Fish and Wildlife Pond","Debris Control","Tailings","Grade Stabilzation","other")
purpose <- do.call(rbind, Map(data.frame, Purp_abbv=abbv, Purp_name=name))
for (i in purpose$Purp_abbv){
j <- which(purpose$Purp_abbv == i, arr.ind=TRUE)
for (n in 1:nrow(df)){
if (grepl(i,df$PURPOSES[n])){
df$PURPOSES_NAME[n] <- purpose$Purp_name[j]
}
}
csv <- df %>% filter(df$PURPOSES_NAME==j)
fn <- paste0(purpose$Purp_name[j],'.csv')
fp <-  file.path('input/DamPurposes_LocFiles',fn)
write.csv(csv, file = fp )
}
DP_files <- list.files("input/Dampurposes_LocFiles", recursive= TRUE, include.dirs = TRUE)
DP_files <- list.files("input/DamPurposes_LocFiles", recursive= TRUE, include.dirs = TRUE)
DP_files <- list.files("input/DamPurposes_LocFiles", recursive= TRUE, include.dirs = TRUE)
?list.files
DP_files <- list.files("input/DamPurposes_LocFiles", recursive= TRUE, full.names =  TRUE)
for (DP in DP_files) {
df <-  read.csv(DP)
}
SW_dam_files <- list.files("input/SW_T_Dam", recursive= TRUE, full.names =  TRUE)
View(df)
SW_dam_files <- list.files("input/SW_T_Dam", recursive= TRUE, full.names =  FALSE)
SW_dam_files <- list.files("input/SW_T_Dam", recursive= TRUE, full.names =  FALSE)
n <- 1
SW_id <- str(df$locname[n])
as.character (df$locname[n])
SW_id_csv <- c(SW_id, '.csv')
SW_id <- as.character(df$locname[n])
SW_id_csv <- c(SW_id, '.csv')
SW_id_csv <- paste0(SW_id, '.csv')
?tryCatch
?try
fp <- file.path('input/DamPurposes_LocFiles',SW_id_csv)
file.exists(fp)
fp <- file.path('input/SW_T_Dam',SW_id_csv)
file.exists(fp)
DP_files <- list.files("input/DamPurposes_LocFiles", recursive= TRUE, full.names =  TRUE)
SW_dam_files <- list.files("input/SW_T_Dam", recursive= TRUE, full.names =  FALSE)
df_loc <-  read.csv(DP,
colClasses=c("locname"="character"))
n 1
n <- 1
SW_id <- as.character(df_loc$locname[n])
SW_id_csv <- paste0(SW_id, '.csv')
fp <- file.path('input/SW_T_Dam',SW_id_csv)
View(df_loc)
df <- read.csv(list.files(pattern = "NWIS_NID_NOAA_Master.csv", recursive = TRUE, full.names = TRUE),
header=T,
stringsAsFactors=F,
colClasses=c("locname"="character"))
library(dplyr)
##-- Read in full join table
df <- read.csv(list.files(pattern = "NWIS_NID_NOAA_Master.csv", recursive = TRUE, full.names = TRUE),
header=T,
stringsAsFactors=F,
colClasses=c("locname"="character"))
df <- read.csv(list.files(pattern = "NWIS_NID_NOAA_master.csv", recursive = TRUE, full.names = TRUE),
header=T,
stringsAsFactors=F,
colClasses=c("locname"="character"))
df <- read.csv(list.files(pattern = "NWIS_NID_NOAA_master.csv", recursive = TRUE, full.names = TRUE),
header=T,
stringsAsFactors=F,
colClasses=c("STAID"="character"))
DF <- data.frame()
DF <- rbind.fill(DF,df)
library(plyr) # for rbind.fill
DF <- rbind.fill(DF,df)
DP_files <- list.files("input/DamPurposes_LocFiles", recursive= TRUE, full.names =  TRUE)
DP_files
DP_files[1]
basename(DP_files[1])
# DP - Dam Purpose
## Library
library(plyr) # for rbind.fill
##List files that may need to be read
DP_files <- list.files("input/DamPurposes_LocFiles", recursive= TRUE, full.names =  TRUE)
SW_dam_files <- list.files("input/SW_T_Dam", recursive= TRUE, full.names =  FALSE)
for (DP in DP_files) {
df_loc <-  read.csv(DP,
colClasses=c("locname"="character"))
DF <- data.frame() #set up empty data to add data to
for (n in 1:nrow(df_loc)){
SW_id <- as.character(df_loc$locname[n])
SW_id_csv <- paste0(SW_id, '.csv')
fp <- file.path('input/SW_T_Dam',SW_id_csv)
#if file exists combine in dataframe
if (file.exists(fp)){
df <- read.csv(fp,
colClasses=c("locname"="character"))
#combine surface water data together for each dam purpose
DF <- rbind.fill(DF,df)
}
}
### --- Output Dam Purpose Data Frame
output_csv <- basename(DP)
fp <-  file.path('input/DamPurposes_Dataframes',output_csv)
write.csv(DF, file = fp )
}
library(ggplot2)
### PLot Figures via Dam Purpose
## Danielle Hare
## October 2019
### Advanced Stream Ecology - Hot Dam
## for later use <- https://stackoverflow.com/questions/21414847/convert-a-date-vector-into-julian-day-in-r
# DP - Dam Purpose
## Library
library(plyr) # for rbind.fill
library(ggplot2)
##List files that may need to be read
DP_files <- list.files("input/DamPurposes_LocFiles", recursive= TRUE, full.names =  TRUE)
SW_dam_files <- list.files("input/SW_T_Dam", recursive= TRUE, full.names =  FALSE)
for (DP in DP_files) {
df_loc <-  read.csv(DP,
colClasses=c("locname"="character"))
DF <- data.frame() #set up empty data to add data to
for (n in 1:nrow(df_loc)){
SW_id <- as.character(df_loc$locname[n])
SW_id_csv <- paste0(SW_id, '.csv')
fp <- file.path('input/SW_T_Dam',SW_id_csv)
#if file exists combine in dataframe
if (file.exists(fp)){
df <- read.csv(fp,
colClasses=c("locname"="character"))
#combine surface water data together for each dam purpose
DF <- rbind.fill(DF,df)
}
}
### --- Output Dam Purpose Data Frame
output_csv <- basename(DP)
fp <-  file.path('input/DamPurposes_Dataframes',output_csv)
write.csv(DF, file = fp )
## --- Plot Image for each type *RAW*
ggplot(DF, aes(Date, WTemp, colour = site_no, group = site_no)) +
geom_point() +
geom_smooth(span = 0.3)
ggsave(fp)
}
output_png <- sub("^([^.]*).*", "\\1", output_csv)
((sub("^([^.]*).*", "\\1", output_csv)),",png")
output_png <- paste0((sub("^([^.]*).*", "\\1", output_csv)),".png")
## Library
library(plyr) # for rbind.fill
library(ggplot2)
##List files that may need to be read
DP_files <- list.files("input/DamPurposes_LocFiles", recursive= TRUE, full.names =  TRUE)
SW_dam_files <- list.files("input/SW_T_Dam", recursive= TRUE, full.names =  FALSE)
for (DP in DP_files) {
df_loc <-  read.csv(DP,
colClasses=c("locname"="character"))
DF <- data.frame() #set up empty data to add data to
for (n in 1:nrow(df_loc)){
SW_id <- as.character(df_loc$locname[n])
SW_id_csv <- paste0(SW_id, '.csv')
fp <- file.path('input/SW_T_Dam',SW_id_csv)
#if file exists combine in dataframe
if (file.exists(fp)){
df <- read.csv(fp,
colClasses=c("locname"="character"))
#combine surface water data together for each dam purpose
DF <- rbind.fill(DF,df)
}
}
### --- Output Dam Purpose Data Frame
output_csv <- basename(DP)
fp <-  file.path('input/DamPurposes_Dataframes',output_csv)
write.csv(DF, file = fp )
output_png <- paste0((sub("^([^.]*).*", "\\1", output_csv)),".png")
fp <-  file.path('input/DamPurposes_Dataframes',output_png)
## --- Plot Image for each type *RAW*
ggplot(DF, aes(Date, WTemp, colour = site_no, group = site_no)) +
geom_point() +
geom_smooth(span = 0.3)
ggsave(fp)
}
### PLot Figures via Dam Purpose
## Danielle Hare
## October 2019
### Advanced Stream Ecology - Hot Dam
## for later use <- https://stackoverflow.com/questions/21414847/convert-a-date-vector-into-julian-day-in-r
# DP - Dam Purpose
## Library
library(plyr) # for rbind.fill
library(ggplot2)
##List files that may need to be read
DP_files <- list.files("input/DamPurposes_LocFiles", recursive= TRUE, full.names =  TRUE)
SW_dam_files <- list.files("input/SW_T_Dam", recursive= TRUE, full.names =  FALSE)
for (DP in DP_files) {
df_loc <-  read.csv(DP,
colClasses=c("locname"="character"))
DF <- data.frame() #set up empty data to add data to
for (n in 1:nrow(df_loc)){
SW_id <- as.character(df_loc$locname[n])
SW_id_csv <- paste0(SW_id, '.csv')
fp <- file.path('input/SW_T_Dam',SW_id_csv)
#if file exists combine in dataframe
if (file.exists(fp)){
df <- read.csv(fp,
colClasses=c("locname"="character"))
#combine surface water data together for each dam purpose
DF <- rbind.fill(DF,df)
}
}
### --- Output Dam Purpose Data Frame
output_csv <- basename(DP)
fp <-  file.path('input/DamPurposes_Dataframes',output_csv)
write.csv(DF, file = fp )
output_png <- paste0((sub("^([^.]*).*", "\\1", output_csv)),".png")
fp <-  file.path('input/DamPurposes_Dataframes',output_png)
## --- Plot Image for each type *RAW*
ggplot(DF, aes(Date, WTemp, colour = site_no, group = site_no)) +
geom_point() +
geom_smooth(span = 0.3)
ggsave(fp)
}
ggplot(DF, aes(Date, WTemp, colour = site_no, group = site_no)) +
geom_point() +
geom_smooth(span = 0.3)
### PLot Figures via Dam Purpose
## Danielle Hare
## October 2019
### Advanced Stream Ecology - Hot Dam
## for later use <- https://stackoverflow.com/questions/21414847/convert-a-date-vector-into-julian-day-in-r
# DP - Dam Purpose
## Library
library(plyr) # for rbind.fill
library(ggplot2)
##List files that may need to be read
DP_files <- list.files("input/DamPurposes_LocFiles", recursive= TRUE, full.names =  TRUE)
SW_dam_files <- list.files("input/SW_T_Dam", recursive= TRUE, full.names =  FALSE)
for (DP in DP_files) {
df_loc <-  read.csv(DP,
colClasses=c("locname"="character"))
DF <- data.frame() #set up empty data to add data to
for (n in 1:nrow(df_loc)){
SW_id <- as.character(df_loc$locname[n])
SW_id_csv <- paste0(SW_id, '.csv')
fp <- file.path('input/SW_T_Dam',SW_id_csv)
#if file exists combine in dataframe
if (file.exists(fp)){
df <- read.csv(fp,
colClasses=c("locname"="character"))
#combine surface water data together for each dam purpose
DF <- rbind.fill(DF,df)
}
}
### --- Output Dam Purpose Data Frame
output_csv <- basename(DP)
fp <-  file.path('input/DamPurposes_Dataframes',output_csv)
write.csv(DF, file = fp )
output_png <- paste0((sub("^([^.]*).*", "\\1", output_csv)),".png")
fp <-  file.path('input/DamPurposes_Dataframes',output_png)
## --- Plot Image for each type *RAW*
try(
ggplot(DF, aes(Date, WTemp, colour = site_no, group = site_no)) +
geom_point() +
geom_smooth(span = 0.3),
ggsave(fp))
}
ggplot(DF, aes(Date, WTemp, colour = site_no, group = site_no)) +
geom_point() +
geom_smooth(span = 0.3)
ggplot(DF, aes(Date, Wtemp, colour = site_no, group = site_no)) +
geom_point() +
geom_smooth(span = 0.3)
try(
plot.DP <- ggplot(DF, aes(Date, Wtemp, colour = site_no, group = site_no)) +
geom_point() +
geom_smooth(span = 0.3),
plot.DP <- plot.DP + facet_wrap( ~ site_no),
ggsave(fp)
)
plot.DP <- ggplot(DF, aes(Date, Wtemp, colour = site_no, group = site_no)) +
geom_point() +
geom_smooth(span = 0.3),
plot.DP <- plot.DP + facet_wrap( ~ site_no)
plot.DP <- ggplot(DF, aes(Date, Wtemp, colour = site_no, group = site_no)) +
geom_point() +
geom_smooth(span = 0.3)
plot.DP <- plot.DP + facet_wrap( ~ site_no)
plot.DP <- ggplot(DF, aes(Date, Wtemp, colour = site_no, group = site_no)) +
geom_point() +
geom_smooth(span = 0.3)
plot.DP <- plot.DP + facet_wrap( ~ site_no)
ggsave(fp)
plot.DP <- ggplot(DF, aes(Date, Wtemp, colour = site_no, group = site_no)) +
geom_point() +
geom_smooth(span = 0.3)
try(
plot.DP <- ggplot(DF, aes(Date, Wtemp, colour = site_no, group = site_no)) +
facet_wrap( ~ site_no, scales = "free")+
geom_point(size = 0.5) +
geom_smooth(span = 0.3),
ggsave(fp)
)
plot.DP <- ggplot(DF, aes(Date, Wtemp, colour = site_no, group = site_no)) +
facet_wrap( ~ site_no, scales = "free")+
geom_point(size = 0.5) +
geom_smooth(span = 0.3)
ggsave(fp)
### PLot Figures via Dam Purpose
## Danielle Hare
## October 2019
### Advanced Stream Ecology - Hot Dam
## for later use <- https://stackoverflow.com/questions/21414847/convert-a-date-vector-into-julian-day-in-r
# DP - Dam Purpose
## Library
library(plyr) # for rbind.fill
library(ggplot2)
##List files that may need to be read
DP_files <- list.files("input/DamPurposes_LocFiles", recursive= TRUE, full.names =  TRUE)
SW_dam_files <- list.files("input/SW_T_Dam", recursive= TRUE, full.names =  FALSE)
for (DP in DP_files) {
df_loc <-  read.csv(DP,
colClasses=c("locname"="character"))
DF <- data.frame() #set up empty data to add data to
for (n in 1:nrow(df_loc)){
SW_id <- as.character(df_loc$locname[n])
SW_id_csv <- paste0(SW_id, '.csv')
fp <- file.path('input/SW_T_Dam',SW_id_csv)
#if file exists combine in dataframe
if (file.exists(fp)){
df <- read.csv(fp,
colClasses=c("locname"="character"))
#combine surface water data together for each dam purpose
DF <- rbind.fill(DF,df)
}
}
### --- Output Dam Purpose Data Frame
output_csv <- basename(DP)
fp <-  file.path('input/DamPurposes_Dataframes',output_csv)
write.csv(DF, file = fp )
## --- Plot Image for each type *RAW*
#make iterative file name
output_png <- paste0((sub("^([^.]*).*", "\\1", output_csv)),".png")
fp <-  file.path('input/DamPurposes_Dataframes',output_png)
# plot
try(
plot.DP <- ggplot(DF, aes(Date, Wtemp, colour = site_no, group = site_no)) +
facet_wrap( ~ site_no, scales = "free")+
geom_point(size = 0.5) +
geom_smooth(span = 0.3)
)
try(
ggsave(fp)
)
}
